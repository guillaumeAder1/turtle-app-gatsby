{"version":3,"sources":["webpack:///./src/components/memoryGame/game.js","webpack:///./src/pages/memory-game.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/turtleGame/utils.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js"],"names":["Game","props","_this","_Component","call","this","numbers","createRandomNumber","state","gridLength","Array","Object","keys","length","fill","map","e","i","temp","found","counter","visible","select","val","_this2","key","getValue","push","setState","assign","setTimeout","match","concat","isDisplay","isSelected","indexOf","isVisible","componentDidMount","_this3","render","_this4","core_browser_esm","react","join","onClick","className","Component","IndexPage","layout","seo","title","keywords","game","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos","toMap","arr","x","y","calculatePos","turtle","dir","newPos","outOfBound","_ref","_ref2","h","w","collision","posStr","randomRange","min","max","Math","ceil","floor","random","str","String","fromCharCode","maxPair","randomLetters","splice","sort","obj","aFunction","fails","$sort","test","F","comparefn","method","arg","$keys","it","core","KEY","exec","fn","exp","S"],"mappings":"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","file":"component---src-pages-memory-game-js-533b6f2f65f7f6f4ad07.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { randomRange, createRandomNumber } from '../turtleGame/utils';\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.numbers = createRandomNumber();\n    this.state = {\n      gridLength: new Array(Object.keys(this.numbers).length)\n        .fill(null)\n        .map((e, i) => i + 1),\n      temp: {},\n      found: [],\n      counter: 0,\n      visible: true,\n    };\n  }\n  select(val) {\n    const key = this.getValue(val);\n    if (!this.state.temp[key]) {\n      this.state.temp[key] = [val];\n      this.setState(\n        {\n          temp: { ...this.state.temp },\n          counter: this.state.counter + 1,\n        },\n        () => {\n          if (this.state.counter === 2) {\n            setTimeout(() => {\n              this.setState({\n                temp: {},\n                counter: 0,\n              });\n            }, 1000);\n          }\n        },\n      );\n    } else if (this.state.temp[key][0] !== val) {\n      this.state.temp[key].push(val);\n      this.setState(\n        {\n          temp: { ...this.state.temp },\n          counter: this.state.counter + 1,\n        },\n        () => {\n          setTimeout(() => {\n            let match = [];\n            if (Object.keys(this.state.temp[key]).length === 2) {\n              match = [key];\n              for (let i in this.numbers) {\n                if (this.numbers[i] === key) {\n                  delete this.numbers[i];\n                }\n              }\n            }\n            this.setState({\n              temp: {},\n              counter: 0,\n              found: this.state.found.concat(match),\n            });\n          }, 1000);\n        },\n      );\n    }\n  }\n  getValue(key) {\n    return this.numbers[key];\n  }\n  isDisplay(val) {\n    const key = this.getValue(val);\n    const isSelected = !!(\n      this.state.temp[key] && this.state.temp[key].indexOf(val) > -1\n    );\n    return this.state.visible || isSelected ? this.numbers[val] : '';\n  }\n  /**\n   *\n   * @param {val} e\n   * add css class if element is not found\n   */\n  isVisible(e) {\n    if (!this.getValue(e)) {\n      return 'hide';\n    }\n    return '';\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n      });\n    }, 4000);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.state.counter > 0 && (\n          <div>looking for: {Object.keys(this.state.temp)[0]}</div>\n        )}\n        {this.state.found.length > 0 && (\n          <div>Symbol found: {this.state.found.join(', ')}</div>\n        )}\n        {this.state.gridLength.map((e, i) => (\n          <div\n            key={i}\n            onClick={() => this.select(e)}\n            className={'cell ' + this.isVisible(e)}\n          >\n            {this.isDisplay(e)}\n          </div>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Game from '../components/memoryGame/game';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Game\" keywords={[`gatsby`, `Memeory`, `game`]} />\n    <h1>Memory</h1>\n    <div className=\"memory-game\">\n      <Game />\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","export const toMap = arr => {\n  const map = {};\n  for (var i in arr) {\n    const str = `${arr[i].x}_${arr[i].y}`;\n    map[str] = 1;\n  }\n  return map;\n};\nexport const calculatePos = (turtle, dir) => {\n  const { x, y } = turtle;\n  let newPos;\n  if (dir === 0) {\n    newPos = { x, y: y - 1 };\n  } else if (dir === 90) {\n    newPos = { x: x + 1, y };\n  } else if (dir === 180) {\n    newPos = { x, y: y + 1 };\n  } else if (dir === 270) {\n    newPos = { x: x - 1, y };\n  }\n  return newPos;\n};\nexport const outOfBound = ({ x, y }, { h, w }) => {\n  const wValid = x > 0 && x <= w;\n  const hValid = y > 0 && y <= h;\n  return !wValid || !hValid;\n};\n\nexport const collision = (posStr, map) => {\n  return !!map[posStr];\n};\n\nexport const randomRange = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const createRandomNumber = () => {\n  const str = new Array(26)\n    .fill(null)\n    .map((e, i) => String.fromCharCode(65 + i));\n  // number of pairs\n  const maxPair = randomRange(5, 10);\n  // get random letters and create array\n  let randomLetters = [];\n  let max = 25;\n  for (var i = 1; i < maxPair; i++) {\n    const index = randomRange(0, max);\n    randomLetters.push(str[index]);\n    str.splice(index, 1);\n    max--;\n  }\n  // duplicate array to have twice each letter\n  randomLetters = randomLetters.concat(randomLetters);\n  // shuffle array\n  randomLetters.sort(() => Math.random() - 0.5);\n  const obj = {};\n  for (var i = 1; i < randomLetters.length; i++) {\n    obj[i] = randomLetters[i];\n  }\n  return obj;\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}