{"version":3,"sources":["webpack:///./src/components/turtleGame/turtle.js","webpack:///./src/components/turtleGame/mine.js","webpack:///./src/components/turtleGame/cell.js","webpack:///./src/components/turtleGame/controls.js","webpack:///./src/components/turtleGame/utils.js","webpack:///./src/components/turtleGame/grid.js","webpack:///./src/pages/turtle-game.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/images/turtle.png","webpack:///./src/images/mine.png"],"names":["connect","state","direction","turtleGame","props","css","transform","Object","core_browser_esm","style","src","Img","Mines","Cell","_Component","call","this","clickCell","console","log","getComp","type","comp","turtleGame_turtle","class","turtleGame_mine","render","_this","el","onClick","className","Component","Control","_useState","useState","count","setCount","callback","allMask","document","querySelectorAll","forEach","e","i","setTimeout","classList","add","remove","length","showHide","disabled","toMap","arr","map","x","y","Grid","_React$Component","turtle","mines","minesMap","_direction","cellVisited","col","Array","size","h","fill","row","w","commands","transformPos","_ref","getType","posStr","turtlePos","indexOf","componentDidUpdate","updateTurtle","evt","dir","newPos","setState","concat","charAt","_rotate","_ref2","_this2","isOut","hitMine","react","key","ind","cell","controls","join","React","propTypes","PropTypes","object","isRequired","array","dispatch","rotateTurtle","sizeGrid","IndexPage","layout","seo","title","keywords","grid","$export","__webpack_require__","P","toObject","toAbsoluteIndex","toLength","module","exports","value","O","aLen","arguments","index","undefined","end","endPos","p"],"mappings":"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","file":"component---src-pages-turtle-game-js-408c083a2e80d6bd00c3.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Img from '../../images/turtle.png';\n\nconst Turtle = props => {\n  const css = {\n    transform: `rotate(${props.direction}deg)`,\n  };\n  return <img style={css} src={Img} />;\n};\n\nexport default connect(state => ({ direction: state.turtleGame.direction }))(Turtle);\n","import React from 'react'\nimport Img from '../../images/mine.png'\nconst Mines = props => {\n  return (\n    <img src={Img}/>\n  )\n}\n\nexport default Mines","import React, { Component } from 'react';\nimport Turtle from './turtle';\nimport Mine from './mine';\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n  }\n  clickCell() {\n    console.log(this.props);\n  }\n\n  getComp(type) {\n    if (type === 'turtle') {\n      const comp =  <Turtle />;\n      return {\n        comp,\n        class: 'turtle'\n      }      \n    } else if (type === 'collision') {\n      const comp =  <Mine />\n      return {\n        comp,\n        class: 'mine visited'\n      }\n    } else if (type === 'mine') {\n      const comp =  <Mine />\n      return {\n        comp,\n        class: 'mine'\n      }\n    } else if (type === 'visited') {\n      const comp = (<div></div>)\n      return {\n        comp,\n        class: 'visited'\n      }\n    } else {\n      const comp = (<div></div>)\n      return {\n        comp,\n        class: 'empty'\n      }\n    }\n  }\n\n  render() {\n    const el = this.getComp(this.props.type);\n    return (\n      <div onClick={() => this.clickCell()} className='cell'>\n        <div className={`mask ${el.class}`}></div>\n         {el.comp}\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","import React, {useState} from 'react'\n\nconst Control = props => {\n  const [count, setCount] = useState(3)\n\n  const move = () => {\n    props.callback('move')\n  }\n  const rotate = () => {\n    props.callback('rotate')\n  }\n  const showHide = () => {\n    setCount(count - 1)\n    if (count > 0) {\n      const allMask = document.querySelectorAll('.cell .mask')\n      allMask.forEach( (e, i) => {\n        setTimeout( () => e.classList.add('display'), 50 * i)   \n        setTimeout(() => {\n          allMask.forEach( e => e.classList.remove('display') )\n        }, allMask.length + 50 * i)     \n      })     \n    }\n  }\n  \n  return (\n    <div>\n      <button onClick={() => move()}>Move</button>\n      <button onClick={() => rotate()}>Rotate</button>      \n      <button onClick={() => showHide() } disabled={ count > 0 ? false : true }>show/hide {count}</button>\n    </div>\n  )\n}\nexport default Control","export const toMap = arr => {\n  const map = {};\n  for (var i in arr) {\n    const str = `${arr[i].x}_${arr[i].y}`;\n    map[str] = 1;\n  }\n  return map;\n};\nexport const calculatePos = (turtle, dir) => {\n  const { x, y } = turtle;\n  let newPos;\n  if (dir === 0) {\n    newPos = { x, y: y - 1 };\n  } else if (dir === 90) {\n    newPos = { x: x + 1, y };\n  } else if (dir === 180) {\n    newPos = { x, y: y + 1 };\n  } else if (dir === 270) {\n    newPos = { x: x - 1, y };\n  }\n  return newPos;\n};\nexport const outOfBound = ({ x, y }, { h, w }) => {\n  const wValid = x > 0 && x <= w;\n  const hValid = y > 0 && y <= h;\n  return !wValid || !hValid;\n};\n\n\nexport const collision = (posStr, map) => {\n  return !!map[posStr]\n}\n\nexport const randomRange = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import React, {Fragment} from 'react';\nimport Cell from './cell';\nimport Control from './controls';\nimport PropTypes from 'prop-types';\nimport { rotate as rotateTurtle } from '../../state/turtleGame';\nimport { connect } from 'react-redux';\nimport { toMap, outOfBound, calculatePos, collision } from './utils';\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      turtle: this.props.turtle,\n      mines: this.props.mines,\n      minesMap: toMap(this.props.mines),\n      direction: this.props._direction,\n      cellVisited: [],\n      col: new Array(this.props.size.h).fill(null),\n      row: new Array(this.props.size.w).fill(null),\n      commands: []\n    };\n  }\n  transformPos({ x, y }) {\n    return `${x}_${y}`;\n  }\n  getType(x, y) {\n    const posStr = this.transformPos({ x, y });\n    const turtlePos = this.transformPos(this.state.turtle);\n    if(posStr === turtlePos && this.state.minesMap[posStr]) {\n      return 'collision'\n    } else if (this.state.minesMap[posStr]) {\n      return 'mine';\n    }  else if (posStr === turtlePos) {\n      return 'turtle';\n    } else if (this.state.cellVisited.indexOf(posStr) > -1) {\n      return 'visited'\n    } else {\n      return 'cell';\n    }\n  }\n  componentDidUpdate() {  }\n  updateTurtle(evt) {\n    if (evt === 'move') {\n      this.setState({\n        turtle: calculatePos(this.state.turtle, this.props._direction),\n        cellVisited: [...this.state.cellVisited, this.transformPos(this.state.turtle) ],\n        commands: [...this.state.commands, evt.charAt(0)]\n      });\n    } else {\n      this.setState({\n        commands: [...this.state.commands, evt.charAt(0)]\n      })\n      this.props._rotate();\n    }\n  }\n  \n\n  render() {\n    const isOut = outOfBound(this.state.turtle, this.props.size);\n    const hitMine = collision(this.transformPos(this.state.turtle), this.state.minesMap)\n    return (\n      <Fragment>\n        {isOut && <div>OUTSIDE</div>}\n        {hitMine && <div>COLLISION</div>}\n        \n        <div className=\"grid\">\n          {this.state.col.map((e, i) => {\n            return (\n              <div key={i} className=\"row-container\">\n                {this.state.row.map((el, ind) => {\n                  const type = this.getType(ind + 1, i + 1);\n                  return <Cell type={type} key={ind} x={ind + 1} y={i + 1} />;\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <Control callback={e => this.updateTurtle(e)} />\n        {this.state.commands.length > 0 && \n          <Fragment>\n            <h3>Commands</h3>\n            <code>{this.state.commands.map(e => `'${e}'`).join(', ')}</code>\n          </Fragment>         \n        }\n      </Fragment>\n    );\n  }\n}\nGrid.propTypes = {\n  size: PropTypes.object.isRequired,\n  turtle: PropTypes.object.isRequired,\n  mines: PropTypes.array.isRequired,\n};\nexport default connect(\n  state => ({ _direction: state.turtleGame.direction }),\n  dispatch => ({ _rotate: () => dispatch(rotateTurtle()) }),\n)(Grid);\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Grid from '../components/turtleGame/grid';\n\nconst sizeGrid = { w: 10, h: 5 }\nconst mines = [{ x: 2, y: 3 }, { x: 3, y: 3 }];\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Game\" keywords={[`gatsby`, `game`, `react`]} />\n    <h1>Deminor Game</h1>\n    <p>Find the exit and take care to the mines...</p>\n    <Grid className={`grid-component`} size={sizeGrid} turtle={{ x: 1, y: 1 }} mines={mines} />\n  </Layout>\n);\n\nexport default IndexPage;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","module.exports = __webpack_public_path__ + \"static/turtle-829e6ff7f2a7a884849e36746513042e.png\";","module.exports = __webpack_public_path__ + \"static/mine-520178a9e230470dffce265d175ba018.png\";"],"sourceRoot":""}